/**
 * This is a game called "The Ultimate Password".
 * The game host can set the password first, from 0 to 100.
 * Then each user can guess the number, with each missing guess
 * will make the guessing section shrink.
 */

class TheUltimatePassword {
   field int password;  // the password

   /** Constructs a new Square Game. */
   constructor TheUltimatePassword new() {
      var int input;
      var boolean exit;
      let exit = false;

      while(~exit) {
         let input = Keyboard.readInt("The game host please set the password from 0 to 99:");
         if(input < 0 | input > 99){
         }else{
            let exit = true;
         }
         do Screen.clearScreen();
      }
      let password = input; 
      do Screen.clearScreen();

      return this;
   }

   /** Start game */
   method void startGame() {
      var int min, max, guess;
      var boolean exit;
      let exit = false;

      let min = 0;
      let max = 99;

      while(~exit) {
         do Output.moveCursor(0,0);
         let guess = Keyboard.readInt("Guess a number:");
         if(guess - min > 0 & guess - max < 0) {
            if(guess = password) {
               let exit = true;
               do drawCountDown();
               do Output.printString("BOOM!");
               do drawBomb();
               do Sys.wait(3000);
            }
            if(guess < password) {
               let min = guess;
               do drawCountDown();
               do printSection(min, max);
            }
            if(guess > password) {
               let max = guess;
               do drawCountDown();
               do printSection(min, max);
            }
         } else {
            do Output.printString("Out of section! ");
            do printSection(min, max);
         }
      }

      return;
   }
   
   /** Print out the section */
   method void printSection(int min, int max) {

      do Output.printString("Please enter between ");
      do Output.printInt(min); 
      do Output.printString(" and ");
      do Output.printInt(max); 
      do Output.println();

      return;
   }

   method void drawBomb() {
      do Screen.setColor(true);
      do Screen.drawCircle(255, 120, 80); 
      do Screen.drawLine(256,120,335,50);
      do Screen.drawLine(255,120,334,50);  //end of line
      do Screen.drawLine(254,120,333,50);
      do Screen.drawLine(334,50,334,40);
      do Screen.drawLine(334,50,344,50);
      do Screen.drawLine(334,50,341,43);

      return;
   }

   method void drawCountDown() {
      do drawThree();
      do Sys.wait(1000);
      do Screen.clearScreen();
      do drawTwo();
      do Sys.wait(1000);
      do Screen.clearScreen();
      do drawOne();
      do Sys.wait(1000);
      do Screen.clearScreen();
      return;
   }

   method void drawOne() {
      do Screen.setColor(true);
      do Screen.drawLine(254,85,254,170);
      do Screen.drawLine(255,85,255,170);
      return;
   }

   method void drawTwo() {
      do Screen.setColor(true);
      do Screen.drawLine(170,85,340,85);
      do Screen.drawLine(170,84,340,84);
      do Screen.drawLine(170,126,340,126);
      do Screen.drawLine(170,127,340,127);
      do Screen.drawLine(170,170,340,170);
      do Screen.drawLine(170,171,340,171);
      do Screen.drawLine(339,85,339,127);
      do Screen.drawLine(340,85,340,127);
      do Screen.drawLine(170,127,170,170);
      do Screen.drawLine(171,127,171,170);
      return;
   }

   method void drawThree() {
      do Screen.setColor(true);
      do Screen.drawLine(170,85,340,85);
      do Screen.drawLine(170,84,340,84);
      do Screen.drawLine(170,126,340,126);
      do Screen.drawLine(170,127,340,127);
      do Screen.drawLine(170,170,340,170);
      do Screen.drawLine(170,171,340,171);
      do Screen.drawLine(339,85,339,170);
      do Screen.drawLine(340,85,340,170);

      return;
   }

   /** Disposes this game. */
   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

}


